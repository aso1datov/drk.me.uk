{
  "extends": [
    "airbnb-typescript",
    "airbnb/hooks",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:cypress/recommended",
    "plugin:prettier/recommended",
    "plugin:react/jsx-runtime",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"],
    "ecmaVersion": 12,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "cypress",
    "dirnames",
    "import",
    "prettier",
    "react",
    "simple-import-sort",
    "unicorn"
  ],
  "rules": {
    "prettier/prettier": "error",

    // React
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/jsx-fragments": ["warn", "syntax"],
    "react/jsx-boolean-value": ["error", "always"],
    "react/jsx-curly-brace-presence": [
      "error",
      { "props": "never", "children": "never" }
    ],
    "react/jsx-one-expression-per-line": "off",

    // Override default airbnb rules
    "no-shadow": "off",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-param-reassign": [
      "error",
      {
        "props": false
      }
    ],

    // Typescript
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-use-before-define": ["error"],

    // Imports
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.{stories,test,tests,spec}.{js,jsx,ts,tsx}",
          "**/*/setupTests.js"
        ]
      }
    ],
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages. `react` related packages come first.
          ["^react", "^redux", "^@?\\w"],
          // Root path for project
          ["^#"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.s?css$"]
        ]
      }
    ],

    // Project structure
    "dirnames/match-kebab-case": "error",
    "unicorn/filename-case": [
      "error",
      {
        "case": "kebabCase"
      }
    ],

    // Tests
    "no-restricted-properties": [
      "error",
      {
        "object": "it",
        "property": "only",
        "message": "Did you forget to remove 'only' from this test?"
      },
      {
        "object": "describe",
        "property": "only",
        "message": "Did you forget to remove 'only' from this test?"
      },
      {
        "object": "context",
        "property": "only",
        "message": "Did you forget to remove 'only' from this test?"
      },
      {
        "object": "test",
        "property": "only",
        "message": "Did you forget to remove 'only' from this test?"
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.{test,tests,spec}.{js,jsx,ts,tsx}"],
      "env": {
        "node": true,
        "jest": true,
        "browser": true
      }
    },
    {
      "files": ["**/cypress/**/*"],
      "env": {
        "cypress/globals": true
      },
      "rules": {
        "cypress/no-assigning-return-values": "error",
        "cypress/no-unnecessary-waiting": "error"
      },
      "parserOptions": {
        "project": ["**/cypress/tsconfig.json"]
      }
    }
  ],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  }
}
